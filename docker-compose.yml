name: ecommerce-backend

services:
  # MongoDB for development
  mongodb:
    image: mongo:7.0
    restart: unless-stopped
    ports:
      - '27017:27017'
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: e_dukaan_dev
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro

  # Redis for caching (optional)
  redis:
    image: redis:7.2-alpine
    restart: unless-stopped
    ports:
      - '6379:6379'
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # Application
  app:
    build: .
    restart: unless-stopped
    ports:
      - '5000:5000'
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://admin:password123@mongodb:27017/e_dukaan_dev?authSource=admin
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      - mongodb
      - redis
    networks:
      - ecommerce-network

  # MongoDB Express for database management (development only)
  mongo-express:
    image: mongo-express:1.0.0
    restart: unless-stopped
    ports:
      - '8081:8081'
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongodb
    networks:
      - ecommerce-network

volumes:
  mongodb_data:
  redis_data:

networks:
  ecommerce-network:
    driver: bridge
